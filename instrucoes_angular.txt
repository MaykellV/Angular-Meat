ngform -> para validar o form

-> para utilizarmos o templete forms é necessario a diretiva ngModel e o atributo name

Form rasatreia os campos com o NGMODEL de forma que se os campos com NGMODEL forem invalidos o form tamb�m ser� inval�do.

NGFORM nos permite mudar as propriedades de um elemento no input por meio do [(ngModel)]. "TWO-WAY BINDING" -> (input e output) ||||| "ONE-WAY BINDING" -> (output)

#myForm="ngForm" nos permite acessar as propriedades do formulario.

Entao podemos por exemplo: habilitar ou n�o um bot�o baseando-se na validade do form.

Gerando componente: ng g c order --spec=false

VALIDACAO DE FORMULARIOS

NGMODEL: ESTADOS DOS CAMPOS

VALID|INVALID

PRISTINE / DIRTY -> O campo se encontra no primeiro estado, assim que o usu�rio digita ele passa a ser DIRTY

TOUCHED -> quando o usu�rio entra no campo.

Para saber o estado do compo precisamos de utilizar o *ngIf="ipt.invalid"


VALIDATORS

Valídamos os campos de um formulario criando um componente chamado mt-input-container e um input como filho dele. 
apartir da classe has-error e has-success do bootstrap damos uma aparencia melhor para as validações.



VALIDACAO COM EXPREÇÕES REGULARES

Para validarmos com EXPREÇÕES regulares devemos usar o atributo pattern="" no input que queremos validar

Expressões regulares usadas na validação de formulários

### Email Regex

`/^(([^<>()\[\]\.,;:\s@\"]+(\.[^<>()\[\]\.,;:\s@\"]+)*)|(\".+\"))@(([^<>()[\]\.,;:\s@\"]+\.)+[^<>()[\]\.,;:\s@\"]{2,})$/i`

### Number Regex

`/^[0-9]*$/`


COMPONENTE PARA Radio - ControlValueAccess

Um componente foi criado para representar o radio, através de um array controlamos os elementos do radio e pagamos o value digitado pelo
evento de click


REACTIVE forms

O form é representado por um form group userForm: FormGroup (interface)

declaramos um private fb: FormBuider para inserir os campos de nosso form.

é equivalente ao templete-form

Dá para validar valores de grupos, com isso conseguimos validar os valores entre os componentes.














 